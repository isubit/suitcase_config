<?php
/**
 * @file
 * Code for the suitcase_config feature.
 */

include_once 'suitcase_config.features.inc';

/**
 * Implements hook_update_projects_alter().
 */
function suitcase_config_update_projects_alter(&$projects) {
  // Hide a site-specific module from the list.
  unset($projects['suitcase_config']);
}

// Add the tb_megamenu block to the branding region for the theme suitcase
function suitcase_config_pre_features_enable_feature($component) {
  watchdog('suitcase_config', 'hook_pre_features_enable_feature', $variables = array($component), $severity = WATCHDOG_NOTICE, $link = NULL);
  //  Removing unwanted blocks
  db_update('block')->fields(array('region' => '-1','status' => '0',))->condition('delta', 'help')->condition('theme', 'suitcase')->execute();
  db_update('block')->fields(array('region' => '-1','status' => '0',))->condition('delta', 'navigation')->condition('theme', 'suitcase')->execute();
  db_update('block')->fields(array('region' => '-1','status' => '0',))->condition('delta', 'management')->condition('theme', 'suitcase')->execute();
  db_update('block')->fields(array('region' => '-1','status' => '0',))->condition('delta', 'login')->condition('theme', 'suitcase')->execute();
}

/**
 *  Implementation of function hook_form_FORM_ID_alter().
 * @param $form
 * @param $form_state
 */
function suitcase_config_form_system_site_information_settings_alter(&$form, &$form_state) {
  $form['site_information']['site_slogan']['#title'] = 'Department name';
  $form['site_information']['site_slogan']['#weight'] = '1';
  $form['site_information']['dept_url']= array(
    '#type' => 'textfield',
    '#title' => 'Department URL',
    '#default_value' => '',
    '#description' => 'Full url to the Department site',
    '#default_value' => variable_get('dept_url', $default = NULL),
    '#weight'=> '2',
  );
  $form['#submit'][]= 'suitcase_config_form_submit';
}

function suitcase_config_form_submit($form, &$form_state) {
  variable_set('dept_url', $form_state['values']['dept_url']);
}

/**
 * Implements hook_menu()
 */
function suitcase_config_menu() {
  $items = array();

  $items['admin/config/theme_settings'] = array(
    'title' => 'Theme',
    'description' => 'Settings related to formatting and configuring themes.',
    'position' => 'right',
    'weight' => -15,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  $items['admin/config/theme_settings/suitcase_config'] = array(
    'title' => 'Suitcase Settings',
    'description' => 'Custom css and logo configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_suitcase_config_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM
  );

  return $items;
}

function _suitcase_config_form($form, &$form_state) {
  $logo_default = variable_get('suitcase_config_logo', array('id'=>NULL, 'uri'=>NULL));
  $form['logo'] = array(
    '#type' => 'managed_file',
    '#name' => 'suitcase_config_logo',
    '#title' => t('Logo Image File'),
    '#size' => 40,
    '#description' => t('Logo should be gif, jpg, jpeg, png or svg'),
    '#upload_location' => 'public://suitcase_config',
    '#default_value' => $logo_default['id'],
  );

  $form['colors'] = array(
    '#type' => 'fieldset',
    '#title' => t('Colors'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $form['colors']['suitcase_config_background_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Background Color'),
    '#description' => t('Default #f4f3e8'),
    '#default_value' => variable_get('suitcase_config_background_color', '#f4f3e8'),
  );

  $form['colors']['suitcase_config_primary_text_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Primary Text Color'),
    '#description' => t('Default #990000'),
    '#default_value' => variable_get('suitcase_config_primary_text_color', '#990000'),
  );

  $form['colors']['suitcase_config_secondary_text_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Secondary Text Color'),
    '#description' => t('Default #ffffff'),
    '#default_value' => variable_get('suitcase_config_secondary_text_color', '#ffffff'),
  );

  $form['colors']['suitcase_config_header_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Header Color'),
    '#description' => t('Default #CB1A2A'),
    '#default_value' => variable_get('suitcase_config_header_color', '#CB1A2A'),
  );

  $form['colors']['suitcase_config_header_border_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Header Border Color'),
    '#description' => t('Default #DFBD00'),
    '#default_value' => variable_get('suitcase_config_header_border_color', '#DFBD00'),
  );

//  $form['colors']['suitcase_config_header_text_color'] = array(
//    '#type' => 'textfield',
//    '#title' => t('Header Text Color'),
//    '#default_value' => variable_get('suitcase_config_header_text_color', '#DFBD00'),
//  );

  $form['colors']['suitcase_config_footer_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Footer Color'),
    '#description' => t('Default #CEC9BB'),
    '#default_value' => variable_get('suitcase_config_footer_color', '#CEC9BB'),
  );

  $form['#submit'][] = '_suitcase_config_form_submit';

  return system_settings_form($form);
}

function _suitcase_config_form_submit($form, &$form_state) {

  // Process logo file
  // TODO: allow file overwrite when saving new image with the same name
  // TODO: validate image file
  if(isset($form_state['values']['logo'])) {
    $logo_variable = variable_get('suitcase_config_logo', array('id'=>NULL, 'uri'=>NULL));
    $current_logo = $logo_variable['id'];
    $new_logo = $form_state['values']['logo'];

    // add image
    if($new_logo && $new_logo != $current_logo) {
      $new_file = file_load($new_logo);
      $new_file->status = FILE_STATUS_PERMANENT;
      file_save($new_file);
      file_usage_add($new_file, 'suitcase_config', 'logo', $new_file->fid);
      $new_logo_variable['id'] = $new_file->fid;
      $new_logo_variable['uri'] = $new_file->uri;
      variable_set('suitcase_config_logo', $new_logo_variable);

      // remove old logo from db and filesystem
      if($current_logo) {
        $old_file = file_load($current_logo);
        file_usage_delete($old_file, 'suitcase_config', 'logo');
        file_delete($old_file);
      }
    }

    // remove image
    if(!$new_logo && $current_logo) {
      $file = file_load($current_logo);
      file_usage_delete($file, 'suitcase_config', 'logo');
      file_delete($file);
      variable_set('suitcase_config_logo', NULL);
    }
  }

  // Process CSS
  $css = new CSS();
  $css->addStyle(array('background-color'=>$form_state['values']['suitcase_config_background_color']),'.section-content');
  $css->addStyle(array(
    'background-color'=>$form_state['values']['suitcase_config_header_color'],
    'border-bottom'=>'6px solid ' . $form_state['values']['suitcase_config_header_border_color'],
  ),'.section-header');
  $css->addStyle(array('background-color'=>$form_state['values']['suitcase_config_header_color']), '#zone-menu.sticky-top');
  $css->addStyle(array('background-color'=>$form_state['values']['suitcase_config_footer_color']),'body');
  $css->addStyle(array('color'=>$form_state['values']['suitcase_config_primary_text_color']),'.section h1,a,a:link,a:visited');
  $css->addStyle(array('color'=>$form_state['values']['suitcase_config_secondary_text_color']),'.site-name a:hover,.site-name-slogan a');
  $css->writeStylesheet();
}

function suitcase_config_preprocess_html(&$variables) {
  if($GLOBALS['theme'] == 'suitcase') {
    drupal_add_css('public://suitcase_config/style.css',array('group'=>200));
  }
}

class CSS {
  protected $contents;
  public function addStyle($styles,$selector) {
    $temp = '';
    foreach($styles as $key => $value) {
      $temp .= $key . ':' . $value . ';';
    }
    $this->contents .= $selector . '{' . $temp . '}' . "\n";
  }
  public function writeStylesheet() {
    $dir = 'public://suitcase_config';
    file_prepare_directory($dir,FILE_CREATE_DIRECTORY);
    file_save_data($this->contents,'public://suitcase_config/style.css',FILE_EXISTS_REPLACE);
  }
}
