<?php
/**
 * @file
 * Code for the suitcase_config feature.
 */

include_once 'suitcase_config.features.inc';

/**
 * Implements hook_update_projects_alter().
 */
function suitcase_config_update_projects_alter(&$projects) {
  // Hide a site-specific module from the list.
  unset($projects['suitcase_config']);
}

// Add the tb_megamenu block to the branding region for the theme suitcase.
function suitcase_config_pre_features_enable_feature($component) {
  watchdog('suitcase_config', 'hook_pre_features_enable_feature', $variables = array($component), $severity = WATCHDOG_NOTICE, $link = NULL);
  //  Removing unwanted blocks.
  db_update('block')->fields(array('region' => '-1', 'status' => '0', ))->condition('delta', 'help')->condition('theme', 'suitcase')->execute();
  db_update('block')->fields(array('region' => '-1', 'status' => '0', ))->condition('delta', 'navigation')->condition('theme', 'suitcase')->execute();
  db_update('block')->fields(array('region' => '-1', 'status' => '0', ))->condition('delta', 'management')->condition('theme', 'suitcase')->execute();
  db_update('block')->fields(array('region' => '-1', 'status' => '0', ))->condition('delta', 'login')->condition('theme', 'suitcase')->execute();
}

/**
 * Implements hook_form_FORM_ID_alter().
 * @param $form
 * @param $form_state
 */
function suitcase_config_form_system_site_information_settings_alter(&$form, &$form_state) {
  $form['site_information']['site_slogan']['#title'] = 'Department name';
  $form['site_information']['site_slogan']['#weight'] = '1';
  $form['site_information']['dept_url']= array(
    '#type' => 'textfield',
    '#title' => 'Department URL',
    '#default_value' => '',
    '#description' => 'Full URL to the Department site',
    '#default_value' => variable_get('dept_url', $default = NULL),
    '#weight' => '2',
  );
  $form['#submit'][]= 'suitcase_config_form_system_information_submit';
}

function suitcase_config_form_system_information_submit($form, &$form_state) {
  variable_set('dept_url', $form_state['values']['dept_url']);
}

/**
 * Implements hook_menu().
 */
function suitcase_config_menu() {
  $items = array();

  $items['admin/config/theme_settings'] = array(
    'title' => 'Theme',
    'description' => 'Settings related to formatting and configuring themes.',
    'position' => 'right',
    'weight' => -15,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  $items['admin/config/theme_settings/suitcase_config'] = array(
    'title' => 'Suitcase Settings',
    'description' => 'Custom CSS and logo configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('suitcase_config_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM
  );

  return $items;
}

/**
 * Implements hook_preprocess_HOOK
 */
function suitcase_config_preprocess_html(&$variables) {
    if ($GLOBALS['theme'] == 'suitcase') {
        drupal_add_css('public://suitcase_config/style.css', array('group' => 200));
    }
}

function suitcase_config_form($form, &$form_state) {
  $logo_default = variable_get('suitcase_config_logo', array('id' => NULL, 'uri' => NULL));
  $form['logo'] = array(
    '#type' => 'managed_file',
    '#name' => 'suitcase_config_logo',
    '#title' => t('Logo Image File'),
    '#size' => 40,
    '#description' => t('Logo should be  a .gif, .jpg, .jpeg, .png or .svg'),
    '#upload_location' => 'public://suitcase_config',
    '#upload_validators' => array('file_validate_extensions' => array('png gif jpg jpeg svg')),
    '#default_value' => $logo_default['id'],
  );

  $form['colors'] = array(
    '#type' => 'fieldset',
    '#title' => t('Colors'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $form['colors']['suitcase_config_background_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Main Background Color'),
    '#description' => t('Default #f4f3e8'),
    '#default_value' => variable_get('suitcase_config_background_color', '#f4f3e8'),
  );

  $form['colors']['suitcase_config_primary_text_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Primary Text Color'),
    '#description' => t('Default #990000'),
    '#default_value' => variable_get('suitcase_config_primary_text_color', '#990000'),
  );

  $form['colors']['suitcase_config_secondary_text_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Secondary Text Color'),
    '#description' => t('Default #ffffff'),
    '#default_value' => variable_get('suitcase_config_secondary_text_color', '#ffffff'),
  );

  $form['colors']['suitcase_config_header_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Header Background Color'),
    '#description' => t('Default #CB1A2A'),
    '#default_value' => variable_get('suitcase_config_header_color', '#CB1A2A'),
  );

  $form['colors']['suitcase_config_header_border_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Header Border Color'),
    '#description' => t('Default #DFBD00'),
    '#default_value' => variable_get('suitcase_config_header_border_color', '#DFBD00'),
  );

  $form['colors']['suitcase_config_footer_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Footer Background Color'),
    '#description' => t('Default #CEC9BB'),
    '#default_value' => variable_get('suitcase_config_footer_color', '#CEC9BB'),
  );

  $form['layout'] = array(
    '#type' => 'fieldset',
    '#title' => t('Layout'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#description' => t('Find department name and URL settings in <a href="@siteinfo">Site Information</a>.', array('@siteinfo' => url('admin/config/system/site-information'))),
  );

  $form['layout']['suitcase_config_blackbar_display'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show black bar'),
    '#description' => t('The black bar contains the Iowa State University links to CyMail, Outlook, Blackboard, AccessPlus, the Directory, Maps, ISU Contact Us, and the index.'),
    '#default_value' => variable_get('suitcase_config_blackbar_display', 1),
  );

  $form['layout']['suitcase_config_isu_nameplate_display'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show ISU nameplate'),
    '#description' => t('The ISU nameplate identifies Iowa State University above the site name and department title.'),
    '#default_value' => variable_get('suitcase_config_isu_nameplate_display', 1),
  );

  $form['#submit'][] = 'suitcase_config_form_submit';
  $form['#validate'][] = 'suitcase_config_form_validate';

  return system_settings_form($form);
}

function suitcase_config_form_submit($form, &$form_state) {

  // Process logo if the logo is defined in the form.
  if ($form_state['values']['logo']) {
    $file = file_load($form_state['values']['logo']);
    if ($file->status != FILE_STATUS_PERMANENT) {
      // If the image isn't already managed, delete the old, manage it and set our variable.

      // Delete the old logo file if it was defined in our variable.
      $old_logo = variable_get('suitcase_config_logo');
      if ($old_logo) {
        $old_logo_file = file_load($old_logo['id']);
        file_usage_delete($old_logo_file, 'suitcase_config', 'logo');
        file_delete($old_logo_file);
      }

      // Manage the new logo file.
      $file->status = FILE_STATUS_PERMANENT;
      file_save($file);
      file_usage_add($file, 'suitcase_config', 'logo', $file->fid);

      // Set the new logo variable.
      $new_logo = array(
        'id' => $file->fid,
        'uri' => $file->uri,
      );
      variable_set('suitcase_config_logo', $new_logo);
    }
  }
  else {
    // If the logo is not defined or has been removed in the form, delete it.
    $variable = variable_get('suitcase_config_logo');
    if ($variable) {
      // If the logo was set in configuration, delete it.
      $file = file_load($variable['id']);
      file_usage_delete($file, 'suitcase_config', 'logo');
      file_delete($file);
      variable_del('suitcase_config_logo');
    }
  }

  // Process CSS.
  $css = new CSS();
  $css->addStyle(array('background-color' => $form_state['values']['suitcase_config_background_color']), '.section-content');
  $css->addStyle(array(
    'background-color' => $form_state['values']['suitcase_config_header_color'],
    'border-bottom' => '6px solid ' . $form_state['values']['suitcase_config_header_border_color'],
  ), '.section-header');
  $css->addStyle(array('background-color' => $form_state['values']['suitcase_config_header_color']), '#zone-menu.sticky-top');
  $css->addStyle(array('background-color' => $form_state['values']['suitcase_config_footer_color']), 'body');
  $css->addStyle(array('color' => $form_state['values']['suitcase_config_primary_text_color']), '.section h1,a,a:link,a:visited');
  $css->addStyle(array('color' => $form_state['values']['suitcase_config_secondary_text_color']), '.site-name a:hover,.site-name-slogan a');
  $css->writeStylesheet();
}

function suitcase_config_form_validate($form, &$form_state) {
  // Validate logo field uploads.
  $logo_validators = array('file_validate_extensions' => array('png gif jpg jpeg svg'));

  // Check for a new uploaded logo.
  $file = file_save_upload('logo', $logo_validators, FALSE, FILE_EXISTS_REPLACE);
  if (isset($file)) {
    // File upload was attempted.
    if ($file) {
      // Put the temporary file in form_values so we can save it on suitcase_config_form_submit().
      $form_state['values']['logo'] = $file->fid;
    }
    else {
      // File upload failed.
      form_set_error('logo', t('The logo could not be uploaded'));
    }
  }


  // Validate CSS Fields.
  if (!suitcase_config_valid_css_color($form_state['values']['suitcase_config_background_color'])) {
    form_set_error('suitcase_config_background_color', t('The color is invalid.'));
  }
  if (!suitcase_config_valid_css_color($form_state['values']['suitcase_config_primary_text_color'])) {
    form_set_error('suitcase_config_primary_text_color', t('The color is invalid.'));
  }
  if (!suitcase_config_valid_css_color($form_state['values']['suitcase_config_secondary_text_color'])) {
    form_set_error('suitcase_config_secondary_text_color', t('The color is invalid.'));
  }
  if (!suitcase_config_valid_css_color($form_state['values']['suitcase_config_header_color'])) {
    form_set_error('suitcase_config_header_color', t('The color is invalid.'));
  }
  if (!suitcase_config_valid_css_color($form_state['values']['suitcase_config_header_border_color'])) {
    form_set_error('suitcase_config_header_border_color', t('The color is invalid.'));
  }
  if (!suitcase_config_valid_css_color($form_state['values']['suitcase_config_footer_color'])) {
    form_set_error('suitcase_config_footer_color', t('The color is invalid.'));
  }
}

function suitcase_config_valid_css_color($color) {
  $pattern1 = '/(^(#)+(\w{6}))|(^(#)+(\w{3}))|(^(rgb\())|(^(rgba\())/m';
  $pattern2 = '/[^(:)|(;)|({)|(})|(,)]/m';
  return preg_match($pattern2, $color, $matches);
}

class CSS {
  protected $contents;
  public function addStyle($styles, $selector) {
    $temp = '';
    foreach ($styles as $key => $value) {
      $temp .= $key . ':' . $value . ';';
    }
    $this->contents .= $selector . '{' . $temp . '}' . "\n";
  }
  public function writeStylesheet() {
    $dir = 'public://suitcase_config';
    file_prepare_directory($dir, FILE_CREATE_DIRECTORY);
    file_save_data($this->contents, 'public://suitcase_config/style.css', FILE_EXISTS_REPLACE);
  }
}
