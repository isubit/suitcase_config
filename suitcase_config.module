<?php
/**
 * @file
 * Code for the suitcase_config feature.
 */

include_once 'suitcase_config.features.inc';

/**
 * Implements hook_update_projects_alter().
 */
function suitcase_config_update_projects_alter(&$projects) {
  // Hide a site-specific module from the list.
  unset($projects['suitcase_config']);
}

// Disable blocks when the suitcase_config feature is enabled.
// This is actually called twice, once for each component in
// suitcase_config.info features (ctools and features_api).
function suitcase_config_pre_features_enable_feature($component) {
  // This conditional has nothing to do with ctools; it just ensures that
  // blocks are disabled only once.
  if ($component == 'ctools') {
    db_update('block')->fields(array('region' => '-1', 'status' => '0', ))->condition('delta', 'help')->condition('theme', 'suitcase')->execute();
    db_update('block')->fields(array('region' => '-1', 'status' => '0', ))->condition('delta', 'navigation')->condition('theme', 'suitcase')->execute();
    db_update('block')->fields(array('region' => '-1', 'status' => '0', ))->condition('delta', 'management')->condition('theme', 'suitcase')->execute();
    db_update('block')->fields(array('region' => '-1', 'status' => '0', ))->condition('delta', 'login')->condition('theme', 'suitcase')->execute();
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 * @param $form
 * @param $form_state
 */
function suitcase_config_form_system_site_information_settings_alter(&$form, &$form_state) {
  $theme = variable_get('theme_default', NULL);
  if ($theme == 'suitcase') {
    $form['site_information']['site_slogan']['#title'] = 'Department name';
    $form['site_information']['site_slogan']['#weight'] = '1';
    $form['site_information']['dept_url']= array(
      '#type' => 'textfield',
      '#title' => 'Department URL',
      '#default_value' => '',
      '#description' => 'Full URL to the Department site',
      '#default_value' => variable_get('dept_url', $default = NULL),
      '#weight' => '2',
    );
    $form['#submit'][]= 'suitcase_config_form_system_information_submit';
  } else if ($theme == 'suitcase_interim') {
    $form['site_information']['level_1'] = array(
      '#type' => 'fieldset',
      '#title' => t('Level 1'),
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
    );

    $form['site_information']['level_1']['site_wordmark'] = array(
      '#type' => 'managed_file',
      '#title' => t('Level 1 (Wordmark)'),
      '#description' => t('Click "Choose File" to select an image to upload.'),
      '#required' => FALSE,
      '#upload_location' => 'public://',
      '#default_value' => variable_get('site_wordmark_fid', $default = NULL),
      '#weight' => 1,
    );

    $form['site_information']['level_1']['level_1_url']= array(
      '#type' => 'textfield',
      '#title' => 'Level 1 URL',
      '#description' => 'Full URL. Defaults to \'http://www.iastate.edu/\'',
      '#default_value' => variable_get('suitcase_config_level_1_url', $default = 'http://www.iastate.edu/'),
      '#weight' => 2,
    );

    $form['site_information']['level_2'] = array(
      '#type' => 'fieldset',
      '#title' => t('Level 2'),
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
    );

    $form['site_information']['site_name']['#title'] = 'Level 2 (Department, College, or Consortium)';
    $form['site_information']['site_name']['#description'] = 'Displays under the wordmark & defaults to "Iowa State University"';
    $form['site_information']['site_name']['#weight'] = 3;
    unset($form['site_information']['site_name']['#required']);

    $site_name = $form['site_information']['site_name'];
    unset($form['site_information']['site_name']);
    $form['site_information']['level_2']['site_name'] = $site_name;

    $form['site_information']['level_2']['dept_url']= array(
      '#type' => 'textfield',
      '#title' => 'Level 2 URL',
      '#description' => 'Full URL to the Department site',
      '#default_value' => variable_get('dept_url', $default = NULL),
      '#weight' => 4,
    );

    $form['site_information']['level_3'] = array(
      '#type' => 'fieldset',
      '#title' => t('Level 3'),
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
    );

    $form['site_information']['site_slogan']['#title'] = 'Level 3 (Lab or Entity name)';
    $form['site_information']['site_slogan']['#description'] = 'Displays under the Level 2 text';
    $form['site_information']['site_slogan']['#weight'] = 5;

    $site_slogan = $form['site_information']['site_slogan'];
    unset($form['site_information']['site_slogan']);
    $form['site_information']['level_3']['site_slogan'] = $site_slogan;

    // Should we show this?
    $form['site_information']['levels_to_show'] = array(
      '#title' => t('What levels do you want to show?'),
      '#type' => 'checkboxes',
      '#description' => t(''),
      '#weight' => 6,
      '#options' => array('2' => '2','3' => '3'),
      '#default_value' => variable_get('suitcase_config_levels_to_show', $default = NULL),
    );

    // Should we show this?
    $form['site_information']['level_that_is_site_name'] = array(
      '#title' => t('Which level is the site name?'),
      '#type' => 'radios',
      '#description' => t(''),
      '#weight' => 7,
      '#options' => array('2' => '2','3' => '3'),
      '#default_value' => variable_get('suitcase_config_level_that_is_site_name', $default = NULL),
    );

    $form['site_information']['site_mail']['#weight'] = 8;

    $form['#submit'][]= 'suitcase_config_form_system_information_submit';
  }
}

function suitcase_config_form_system_information_submit($form, &$form_state) {
  variable_set('site_name', $form_state['values']['site_name']);
  variable_set('site_slogan', $form_state['values']['site_slogan']);
  variable_set('suitcase_config_level_1_url', $form_state['values']['level_1_url']);
  variable_set('dept_url', $form_state['values']['dept_url']);
  variable_set('suitcase_config_levels_to_show', $form_state['values']['levels_to_show']);
  variable_set('suitcase_config_level_that_is_site_name', $form_state['values']['level_that_is_site_name']);

  if ($form_state['values']['site_name'] == '') {
    variable_set('site_name', 'Iowa State University');
  }

  if (isset($form_state['values']['site_wordmark']) && $form_state['values']['site_wordmark'] != 0) {
    $file = file_load($form_state['values']['site_wordmark']);
    $file->status = FILE_STATUS_PERMANENT;
//  file_usage_add($file, 'module_name', 'entity_name', $entity_id);
    file_save($file);
    file_usage_add($file, 'suitcase_interim', 'suitcase_interim', 1);

    variable_set('site_wordmark', $file->uri);
    variable_set('site_wordmark_fid', $file->fid);
  } else {
    variable_set('site_wordmark', NULL);
    variable_set('site_wordmark_fid', NULL);
  }
}

/**
 * Implements hook_menu().
 */
function suitcase_config_menu() {

  $items['admin/config/theme_settings'] = array(
    'title' => 'Theme',
    'description' => 'Settings related to formatting and configuring themes.',
    'position' => 'right',
    'weight' => -15,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  $items['admin/config/theme_settings/suitcase_config'] = array(
    'title' => 'Suitcase Settings',
    'description' => 'Custom CSS and site symbol configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('suitcase_config_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM
  );

  return $items;
}

/**
 * Implements hook_preprocess_HOOK
 */
function suitcase_config_preprocess_html(&$variables) {
  if ($GLOBALS['theme'] == 'suitcase') {
    drupal_add_css('public://suitcase_config/style.css', array('group' => 200));
  }
}

function suitcase_config_form($form, &$form_state) {
  $logo_default = variable_get('suitcase_config_logo', array('id' => NULL, 'uri' => NULL));
  $form['logo'] = array(
    '#type' => 'managed_file',
    '#name' => 'suitcase_config_logo',
    '#title' => t('Symbol Image File'),
    '#size' => 40,
    '#description' => t('Symbol should be  a .gif, .jpg, .jpeg, .png or .svg'),
    '#upload_location' => 'public://suitcase_config',
    '#upload_validators' => array('file_validate_extensions' => array('png gif jpg jpeg svg')),
    '#default_value' => $logo_default['id'],
  );

  $form['colors'] = array(
    '#type' => 'fieldset',
    '#title' => t('Colors'),
    '#description' => t('For standard Iowa State University sites complying with the Visual Identity System these colors should be set to their default values.'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

  $form['colors']['suitcase_config_background_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Main Background Color'),
    '#description' => t('Default: #f4f3e8'),
    '#default_value' => variable_get('suitcase_config_background_color', '#f4f3e8'),
  );

  $form['colors']['suitcase_config_primary_text_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Primary Text Color'),
    '#description' => t('Default: #990000'),
    '#default_value' => variable_get('suitcase_config_primary_text_color', '#990000'),
  );

  $form['colors']['suitcase_config_secondary_text_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Secondary Text Color'),
    '#description' => t('Default: #ffffff'),
    '#default_value' => variable_get('suitcase_config_secondary_text_color', '#ffffff'),
  );

  $form['colors']['suitcase_config_header_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Header Background Color'),
    '#description' => t('Default: #cb1a2a'),
    '#default_value' => variable_get('suitcase_config_header_color', '#cb1a2a'),
  );

  $form['colors']['suitcase_config_header_border_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Header Border Color'),
    '#description' => t('Default: #dfbd00'),
    '#default_value' => variable_get('suitcase_config_header_border_color', '#dfbd00'),
  );

  $form['colors']['suitcase_config_footer_color'] = array(
    '#type' => 'textfield',
    '#title' => t('Footer Background Color'),
    '#description' => t('Default: #cec9bb'),
    '#default_value' => variable_get('suitcase_config_footer_color', '#cec9bb'),
  );

  $form['layout'] = array(
    '#type' => 'fieldset',
    '#title' => t('Layout'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#description' => t('Find department name and URL settings in <a href="@siteinfo">Site Information</a>.', array('@siteinfo' => url('admin/config/system/site-information'))),
  );

  $form['layout']['suitcase_config_blackbar_display'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show black bar'),
    '#description' => t('The black bar contains the Iowa State University links to CyMail, Outlook, Blackboard, AccessPlus, the Directory, Maps, ISU Contact Us, and the index.'),
    '#default_value' => variable_get('suitcase_config_blackbar_display', 1),
  );

  $form['layout']['suitcase_config_isu_nameplate_display'] = array(
    '#type' => 'checkbox',
    '#title' => t('Show ISU nameplate'),
    '#description' => t('The ISU nameplate identifies Iowa State University above the site name and department title.'),
    '#default_value' => variable_get('suitcase_config_isu_nameplate_display', 1),
  );

  $form['#submit'][] = 'suitcase_config_form_submit';
  $form['#validate'][] = 'suitcase_config_form_validate';

  return system_settings_form($form);
}

function suitcase_config_form_submit($form, &$form_state) {

  // Process logo if the logo is defined in the form.
  if ($form_state['values']['logo']) {
    $file = file_load($form_state['values']['logo']);
    if ($file->status != FILE_STATUS_PERMANENT) {
      // If the image isn't already managed, delete the old, manage it and set our variable.

      // Delete the old logo file if it was defined in our variable.
      $old_logo = variable_get('suitcase_config_logo');
      if ($old_logo) {
        $old_logo_file = file_load($old_logo['id']);
        file_usage_delete($old_logo_file, 'suitcase_config', 'logo');
        file_delete($old_logo_file);
      }

      // Manage the new logo file.
      $file->status = FILE_STATUS_PERMANENT;
      file_save($file);
      file_usage_add($file, 'suitcase_config', 'logo', $file->fid);

      // Set the new logo variable.
      $new_logo = array(
        'id' => $file->fid,
        'uri' => $file->uri,
      );
      variable_set('suitcase_config_logo', $new_logo);
    }
  }
  else {
    // If the logo is not defined or has been removed in the form, delete it.
    $suitcase_config_logo = variable_get('suitcase_config_logo');
    if ($suitcase_config_logo) {
      // If the logo was set in configuration, delete it.
      $file = file_load($suitcase_config_logo['id']);
      file_usage_delete($file, 'suitcase_config', 'logo');
      file_delete($file);
      variable_del('suitcase_config_logo');
    }
  }

  // Process CSS.
  $css = suitcase_config_add_style(array('background-color' => $form_state['values']['suitcase_config_background_color']), '.section-content');
  $css .= suitcase_config_add_style(array(
    'background-color' => $form_state['values']['suitcase_config_header_color'],
    'border-bottom' => '6px solid ' . $form_state['values']['suitcase_config_header_border_color'],
  ), '.section-header');
  $css .= suitcase_config_add_style(array('background-color' => $form_state['values']['suitcase_config_header_color']), '#zone-menu.sticky-top');
  $css .= suitcase_config_add_style(array('background-color' => $form_state['values']['suitcase_config_footer_color']), 'body');
  $css .= suitcase_config_add_style(array('color' => $form_state['values']['suitcase_config_primary_text_color']), '.section h1,a,a:link,a:visited');
  $css .= suitcase_config_add_style(array('color' => $form_state['values']['suitcase_config_secondary_text_color']), '.site-name a:hover,.site-name-slogan a');
  
  // Write styles to, e.g., files/suitcase_config/style.css
  $dir = 'public://suitcase_config';
  file_prepare_directory($dir, FILE_CREATE_DIRECTORY);
  file_save_data($css, 'public://suitcase_config/style.css', FILE_EXISTS_REPLACE);
}

function suitcase_config_form_validate($form, &$form_state) {
  // Validate logo field uploads.
  $logo_validators = array('file_validate_extensions' => array('png gif jpg jpeg svg'));

  // Check for a new uploaded logo.
  $file = file_save_upload('logo', $logo_validators, FALSE, FILE_EXISTS_REPLACE);
  if (isset($file)) {
    // File upload was attempted.
    if ($file) {
      // Put the temporary file in form_values so we can save it on suitcase_config_form_submit().
      $form_state['values']['logo'] = $file->fid;
    }
    else {
      // File upload failed.
      form_set_error('logo', t('The symbol could not be uploaded'));
    }
  }

  // Validate CSS Fields.
  if (!suitcase_config_valid_css_color($form_state['values']['suitcase_config_background_color'])) {
    form_set_error('suitcase_config_background_color', t('The color is invalid.'));
  }
  if (!suitcase_config_valid_css_color($form_state['values']['suitcase_config_primary_text_color'])) {
    form_set_error('suitcase_config_primary_text_color', t('The color is invalid.'));
  }
  if (!suitcase_config_valid_css_color($form_state['values']['suitcase_config_secondary_text_color'])) {
    form_set_error('suitcase_config_secondary_text_color', t('The color is invalid.'));
  }
  if (!suitcase_config_valid_css_color($form_state['values']['suitcase_config_header_color'])) {
    form_set_error('suitcase_config_header_color', t('The color is invalid.'));
  }
  if (!suitcase_config_valid_css_color($form_state['values']['suitcase_config_header_border_color'])) {
    form_set_error('suitcase_config_header_border_color', t('The color is invalid.'));
  }
  if (!suitcase_config_valid_css_color($form_state['values']['suitcase_config_footer_color'])) {
    form_set_error('suitcase_config_footer_color', t('The color is invalid.'));
  }
}

function suitcase_config_valid_css_color($color) {
  // Limit the allowed characters to the list in the pattern.
  $pattern = "/[^ abcdefghijklmnopqrstuvwxyz1234567890(),#%.]/im";
  return !preg_match($pattern, $color);
}

function suitcase_config_add_style($styles, $selector) {
  $s = '';
  foreach ($styles as $key => $value) {
    $s .= $key . ':' . $value . ';';
  }
  return $selector . '{' . $s . "}\n";
}

/**
 * Implements hook_form_FORM_ID_alter().
 * 
 * Since suitcase_config is handling the Omega logo functions, remove those 
 * from the theme settings form and point user to the Suitcase Settings page.
 */
function suitcase_config_form_system_theme_settings_alter(&$form) {
  // If settings for suitcase are being displayed.
  if (isset($form['suitcase'])) {
    $form['logo']['default_logo']['#access'] = FALSE;
    $form['logo']['settings']['logo_path']['#access'] = FALSE;
    $form['logo']['settings']['logo_upload']['#access'] = FALSE;
    $form['logo']['#description'] = t('With the Suitcase theme enabled, these settings are available at !Suitcase Settings.', array('!Suitcase Settings' => l(t('Suitcase Settings'), 'admin/config/theme_settings/suitcase_config')));
    $form['theme_settings']['toggle_logo']['#access'] = FALSE;
  } 
}
